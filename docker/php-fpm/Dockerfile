#
# This file is automatically generated. Do not edit directly.
#

FROM php:7.3-fpm

MAINTAINER Alex Skrashuk zhartaunik@gmail.com

### NodeJS section
# Env variables for node.js
ARG PHP_NODE_NPM_HOME=/var/www/.npm
ARG PHP_NODE_NPM_CONFIG=/var/www/.config
ENV PHP_NODE_NPM_HOME ${PHP_NODE_NPM_HOME}
ENV PHP_NODE_NPM_CONFIG ${PHP_NODE_NPM_CONFIG}
RUN mkdir -p $PHP_NODE_NPM_HOME $PHP_NODE_NPM_CONFIG

# install node.js
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install -y nodejs
RUN apt-get install -y fontconfig
RUN npm install -g grunt
RUN npm install phantomjs

# Install dependencies
RUN apt-get update \
  && apt-get install -y \
    libfreetype6-dev \
    libicu-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libpng-dev \
    libxslt1-dev \
    mariadb-client \
    libzip-dev \
    zip \
    git \
    sudo \
    iputils-ping \
    vim

# Configure the gd library
RUN docker-php-ext-configure \
  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/

# Install required PHP extensions

RUN docker-php-ext-install \
  zip \
  dom \
  gd \
  intl \
  mbstring \
  pdo_mysql \
  xsl \
  zip \
  soap \
  bcmath \
  opcache \
  sockets

RUN pecl install mcrypt-1.0.2
RUN docker-php-ext-enable mcrypt

# Install Xdebug (but don't enable)
RUN pecl install -o -f redis apcu xdebug \
    && docker-php-ext-enable redis apcu xdebug

# Get composer installed to /usr/local/bin/composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer.phar \
    --version=1.10.20

# Add bin files into container
COPY bin/* /usr/local/bin/
RUN chmod +x /usr/local/bin/*

ADD etc/apc.ini $PHP_INI_DIR/conf.d/zz-apc.ini
ADD etc/php.ini $PHP_INI_DIR/conf.d/zz-php.ini
ADD etc/php-xdebug.ini $PHP_INI_DIR/conf.d/zz-xdebug.ini
ADD etc/opcache.ini $PHP_INI_DIR/conf.d/zz-opcache.ini
ADD etc/mail.ini $PHP_INI_DIR/conf.d/zz-mail.ini

RUN chmod -R +rw $PHP_INI_DIR/conf.d

WORKDIR /var/www/magento

ADD docker-entrypoint.sh /docker-entrypoint.sh

RUN ["chmod", "+x", "/docker-entrypoint.sh"]
ENTRYPOINT ["/docker-entrypoint.sh"]

ENV MAGENTO_RUN_MODE developer
ENV UPLOAD_MAX_FILESIZE 64M

ADD etc/php-fpm.conf /usr/local/etc/

ENV PHP_MEMORY_LIMIT 2048M
ENV PHP_ENABLE_XDEBUG false
ENV MAGENTO_ROOT /var/www/magento
ENV DEBUG false

RUN groupadd -g 1000 magento
RUN useradd -d /home/magento -s /bin/bash -u 1000 -g 1000 magento
RUN echo "magento:magento" | chpasswd && adduser magento sudo

RUN mkdir -p /home/magento
RUN mkdir -p /var/www/magento
RUN mkdir -p /var/www/.composer
RUN chown -R magento:magento /home/magento
RUN chown -R magento:magento /var/www/magento
RUN chown -R magento:magento /var/www/.composer
RUN chown -R magento:magento $PHP_NODE_NPM_HOME
RUN chown -R magento:magento $PHP_NODE_NPM_CONFIG
RUN chown -R magento:magento /usr/local/etc

USER magento

CMD ["php-fpm", "-F"]
